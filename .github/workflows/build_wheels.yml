name: Build Python Wheels

on:
  # allow manual runs
  workflow_dispatch:
  # run when we tag a release
  release:
    types:
      - "created"

env:
  BUILD_TYPE: Release

jobs:
  build_sdist:
    name: Source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: false

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip setuptools wheel numpy tox pytest build

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "MacOS Latest, Clang",
            os: macos-latest,
            aarch: x86_64,
            cc: "clang", cxx: "clang++"
          }
        - {
            name: "Ubuntu Latest, GCC",
            os: ubuntu-latest,
            aarch: x86_64,
            cc: "gcc", cxx: "g++"
          }
        - {
            name: "Ubuntu Latest, GCC, aarch64",
            os: ubuntu-latest,
            aarch: aarch64,
            cc: "gcc", cxx: "g++"
          }
        - {
            name: "Windows Latest, MSVC",
            os: windows-latest,
            aarch: x86_64,
            cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
            
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: false

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      
      - name: Set up Qemu when building arm
        if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip setuptools wheel numpy tox pytest build cibuildwheel==2.1.1 twine
        
      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_SKIP: "*-win32"
          CIBW_BUILD: "cp37-*64 cp38-*64 cp38-*64 cp39-*64"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_ARCHS_MACOS: "x86_64 universal2"
          CIBW_ARCHS_LINUX: ${{ matrix.config.arch }}

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl
